{"remainingRequest":"/Users/pstaab/code/standards-grading/node_modules/babel-loader/lib/index.js!/Users/pstaab/code/standards-grading/node_modules/ts-loader/index.js??ref--14-2!/Users/pstaab/code/standards-grading/node_modules/eslint-loader/index.js??ref--13-0!/Users/pstaab/code/standards-grading/src/store/modules/course.ts","dependencies":[{"path":"/Users/pstaab/code/standards-grading/src/store/modules/course.ts","mtime":1592133706057},{"path":"/Users/pstaab/code/standards-grading/node_modules/cache-loader/dist/cjs.js","mtime":1588951537868},{"path":"/Users/pstaab/code/standards-grading/node_modules/babel-loader/lib/index.js","mtime":1588951537846},{"path":"/Users/pstaab/code/standards-grading/node_modules/ts-loader/index.js","mtime":1588951543530},{"path":"/Users/pstaab/code/standards-grading/node_modules/eslint-loader/index.js","mtime":1588951542635}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvcHN0YWFiL2NvZGUvc3RhbmRhcmRzLWdyYWRpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvcHN0YWFiL2NvZGUvc3RhbmRhcmRzLWdyYWRpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvcHN0YWFiL2NvZGUvc3RhbmRhcmRzLWdyYWRpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvcHN0YWFiL2NvZGUvc3RhbmRhcmRzLWdyYWRpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IHsgX19hd2FpdGVyLCBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBNb2R1bGUsIFZ1ZXhNb2R1bGUsIE11dGF0aW9uLCBBY3Rpb24gfSBmcm9tICJ2dWV4LW1vZHVsZS1kZWNvcmF0b3JzIjsKCnZhciBDb3Vyc2VzTW9kdWxlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVleE1vZHVsZSkgewogIF9pbmhlcml0cyhDb3Vyc2VzTW9kdWxlLCBfVnVleE1vZHVsZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQ291cnNlc01vZHVsZSk7CgogIGZ1bmN0aW9uIENvdXJzZXNNb2R1bGUoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvdXJzZXNNb2R1bGUpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5jb3Vyc2Vfc3RhdGUgPSB7CiAgICAgIGNvdXJzZXM6IFtdLAogICAgICBjb3Vyc2VfdXNlcnM6IFtdCiAgICB9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKENvdXJzZXNNb2R1bGUsIFt7CiAgICBrZXk6ICJmZXRjaENvdXJzZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoQ291cnNlcygpIHsKICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBjb3Vyc2VzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiL2dyYWRpbmdzaGVldC9hcGkvY291cnNlcyIpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb3Vyc2VzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgIHRoaXMuc2V0Q291cnNlcyhjb3Vyc2VzKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGNvdXJzZXMpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwogICAgfQogIH0sIHsKICAgIGtleTogImZldGNoQ291cnNlVXNlcnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoQ291cnNlVXNlcnMob3B0cykgewogICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBjb3Vyc2VfdXNlcnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoIi9ncmFkaW5nc2hlZXQvYXBpL2NvdXJzZXMvIi5jb25jYXQob3B0cy5jb3Vyc2VfaWQsICIvdXNlcnMiKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb3Vyc2VfdXNlcnMgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgdGhpcy5zZXRDb3Vyc2VVc2Vycyhjb3Vyc2VfdXNlcnMpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGNvdXJzZV91c2Vycyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVDb3Vyc2VVc2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVDb3Vyc2VVc2VyKGNvdXJzZV91c2VyKSB7CiAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIHVzZXIsIGluZGV4OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucHV0KCIvZ3JhZGluZ3NoZWV0L2FwaS9jb3Vyc2VzLyIuY29uY2F0KGNvdXJzZV91c2VyLmNvdXJzZV9pZCwgIi91c2Vycy8iKS5jb25jYXQoY291cnNlX3VzZXIudXNlcl9pZCksIHsKICAgICAgICAgICAgICAgICAgY291cnNlX3VzZXI6IGNvdXJzZV91c2VyCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIHVzZXIgPSByZXNwb25zZS5kYXRhOyAvLyBmaW5kIHRoZSBjdXJyZW50IGNvdXJzZV91c2VyCgogICAgICAgICAgICAgICAgaW5kZXggPSB0aGlzLmNvdXJzZV9zdGF0ZS5jb3Vyc2VfdXNlcnMuZmluZEluZGV4KGZ1bmN0aW9uIChfdXNlcikgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3VzZXIudXNlcl9pZCA9PT0gY291cnNlX3VzZXIudXNlcl9pZDsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGlmIChpbmRleCA+IC0xKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Q291cnNlVXNlcih1c2VyKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQ291cnNlVXNlcih1c2VyKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgY291cnNlX3VzZXIpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpOwogICAgICB9KSk7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0Q291cnNlVXNlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0Q291cnNlVXNlcihfdXNlcikgewogICAgICB2YXIgaW5kZXggPSB0aGlzLmNvdXJzZV9zdGF0ZS5jb3Vyc2VfdXNlcnMuZmluZEluZGV4KGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgcmV0dXJuIHVzZXIudXNlcl9pZCA9PT0gX3VzZXIudXNlcl9pZDsKICAgICAgfSk7CiAgICAgIHRoaXMuY291cnNlX3N0YXRlLmNvdXJzZV91c2Vyc1tpbmRleF0gPSBfdXNlcjsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJhZGRDb3Vyc2VVc2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRDb3Vyc2VVc2VyKF91c2VyKSB7CiAgICAgIHRoaXMuY291cnNlX3N0YXRlLmNvdXJzZV91c2Vycy5wdXNoKF91c2VyKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRDb3Vyc2VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRDb3Vyc2VzKF9jb3Vyc2VzKSB7CiAgICAgIHRoaXMuY291cnNlX3N0YXRlLmNvdXJzZXMgPSBfY291cnNlczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRDb3Vyc2VVc2VycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0Q291cnNlVXNlcnMoY291cnNlX3VzZXJzKSB7CiAgICAgIHRoaXMuY291cnNlX3N0YXRlLmNvdXJzZV91c2VycyA9IGNvdXJzZV91c2VyczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb3Vyc2VzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5jb3Vyc2Vfc3RhdGUuY291cnNlczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb3Vyc2VfdXNlcnMiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLmNvdXJzZV9zdGF0ZS5jb3Vyc2VfdXNlcnM7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQ291cnNlc01vZHVsZTsKfShWdWV4TW9kdWxlKTsKCl9fZGVjb3JhdGUoW0FjdGlvbl0sIENvdXJzZXNNb2R1bGUucHJvdG90eXBlLCAiZmV0Y2hDb3Vyc2VzIiwgbnVsbCk7CgpfX2RlY29yYXRlKFtBY3Rpb25dLCBDb3Vyc2VzTW9kdWxlLnByb3RvdHlwZSwgImZldGNoQ291cnNlVXNlcnMiLCBudWxsKTsKCl9fZGVjb3JhdGUoW0FjdGlvbl0sIENvdXJzZXNNb2R1bGUucHJvdG90eXBlLCAidXBkYXRlQ291cnNlVXNlciIsIG51bGwpOwoKX19kZWNvcmF0ZShbTXV0YXRpb25dLCBDb3Vyc2VzTW9kdWxlLnByb3RvdHlwZSwgInNldENvdXJzZVVzZXIiLCBudWxsKTsKCl9fZGVjb3JhdGUoW011dGF0aW9uXSwgQ291cnNlc01vZHVsZS5wcm90b3R5cGUsICJhZGRDb3Vyc2VVc2VyIiwgbnVsbCk7CgpfX2RlY29yYXRlKFtNdXRhdGlvbl0sIENvdXJzZXNNb2R1bGUucHJvdG90eXBlLCAic2V0Q291cnNlcyIsIG51bGwpOwoKX19kZWNvcmF0ZShbTXV0YXRpb25dLCBDb3Vyc2VzTW9kdWxlLnByb3RvdHlwZSwgInNldENvdXJzZVVzZXJzIiwgbnVsbCk7CgpDb3Vyc2VzTW9kdWxlID0gX19kZWNvcmF0ZShbTW9kdWxlKHsKICBuYW1lOiAiQ291cnNlc01vZHVsZSIsCiAgbmFtZXNwYWNlZDogdHJ1ZQp9KV0sIENvdXJzZXNNb2R1bGUpOwpleHBvcnQgZGVmYXVsdCBDb3Vyc2VzTW9kdWxlOw=="},{"version":3,"sources":["/Users/pstaab/code/standards-grading/node_modules/eslint-loader/index.js??ref--13-0!/Users/pstaab/code/standards-grading/src/store/modules/course.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SACE,MADF,EACU,UADV,EACsB,QADtB,EACgC,MADhC,QAEO,wBAFP;;AAYA,IAAqB,aAArB;AAAA;;AAAA;;AAAA,2BAAA;AAAA;;AAAA;;;AACU,UAAA,YAAA,GAA4B;AAClC,MAAA,OAAO,EAAE,EADyB;AAElC,MAAA,YAAY,EAAE;AAFoB,KAA5B;AADV;AA+DC;;AA/DD;AAAA;AAAA,mCAe2B;;;;;;;;AACN,uBAAM,KAAK,CAAC,GAAN,CAAU,2BAAV,CAAN;;;AAAX,gBAAA,Q;AACA,gBAAA,O,GAAU,QAAQ,CAAC,I;AACzB,qBAAK,UAAL,CAAgB,OAAhB;iDACO,O;;;;;;;;;AACR;AApBH;AAAA;AAAA,qCAuBgC,IAvBhC,EAuB2D;;;;;;;;AACtC,uBAAM,KAAK,CAAC,GAAN,qCAAuC,IAAI,CAAC,SAA5C,YAAN;;;AAAX,gBAAA,Q;AACA,gBAAA,Y,GAAe,QAAQ,CAAC,I;AAC9B,qBAAK,cAAL,CAAoB,YAApB;kDACO,Y;;;;;;;;;AACR;AA5BH;AAAA;AAAA,qCA+BgC,WA/BhC,EA+BuD;;;;;;;;AAClC,uBAAM,KAAK,CACzB,GADoB,qCACa,WAAW,CAAC,SADzB,oBAC4C,WAAW,CAAC,OADxD,GAEnB;AAAE,kBAAA,WAAW,EAAX;AAAF,iBAFmB,CAAN;;;AAAX,gBAAA,Q;AAGA,gBAAA,I,GAAO,QAAQ,CAAC,I,EAEtB;;AACM,gBAAA,K,GAAQ,KAAK,YAAL,CAAkB,YAAlB,CAA+B,SAA/B,CAAyC,UAAC,KAAD;AAAA,yBAAW,KAAK,CAAC,OAAN,KAAkB,WAAW,CAAC,OAAzC;AAAA,iBAAzC,C;;AACd,oBAAI,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,uBAAK,aAAL,CAAmB,IAAnB;AACD,iBAFD,MAEO;AACL,uBAAK,aAAL,CAAmB,IAAnB;AACD;;kDACM,W;;;;;;;;;AACR;AA7CH;AAAA;AAAA,kCA+C0B,KA/C1B,EA+C2C;AACvC,UAAM,KAAK,GAAG,KAAK,YAAL,CAAkB,YAAlB,CAA+B,SAA/B,CAAyC,UAAC,IAAD;AAAA,eAAU,IAAI,CAAC,OAAL,KAAiB,KAAK,CAAC,OAAjC;AAAA,OAAzC,CAAd;AACA,WAAK,YAAL,CAAkB,YAAlB,CAA+B,KAA/B,IAAwC,KAAxC;AACD;AAlDH;AAAA;AAAA,kCAoD0B,KApD1B,EAoD2C;AACvC,WAAK,YAAL,CAAkB,YAAlB,CAA+B,IAA/B,CAAoC,KAApC;AACD;AAtDH;AAAA;AAAA,+BAwDuB,QAxDvB,EAwDyC;AACrC,WAAK,YAAL,CAAkB,OAAlB,GAA4B,QAA5B;AACD;AA1DH;AAAA;AAAA,mCA4D2B,YA5D3B,EA4DqD;AACjD,WAAK,YAAL,CAAkB,YAAlB,GAAiC,YAAjC;AACD;AA9DH;AAAA;AAAA,wBAMoB;AAChB,aAAO,KAAK,YAAL,CAAkB,OAAzB;AACD;AARH;AAAA;AAAA,wBAUyB;AACrB,aAAO,KAAK,YAAL,CAAkB,YAAzB;AACD;AAZH;;AAAA;AAAA,EAA2C,UAA3C,CAAA;;AAeE,UAAA,CAAA,CADC,MACD,CAAA,E,uBAAA,E,cAAA,EAKC,IALD,CAAA;;AAQA,UAAA,CAAA,CADC,MACD,CAAA,E,uBAAA,E,kBAAA,EAKC,IALD,CAAA;;AAQA,UAAA,CAAA,CADC,MACD,CAAA,E,uBAAA,E,kBAAA,EAcC,IAdD,CAAA;;AAgBU,UAAA,CAAA,CAAT,QAAS,CAAA,E,uBAAA,E,eAAA,EAGT,IAHS,CAAA;;AAKA,UAAA,CAAA,CAAT,QAAS,CAAA,E,uBAAA,E,eAAA,EAET,IAFS,CAAA;;AAIA,UAAA,CAAA,CAAT,QAAS,CAAA,E,uBAAA,E,YAAA,EAET,IAFS,CAAA;;AAIA,UAAA,CAAA,CAAT,QAAS,CAAA,E,uBAAA,E,gBAAA,EAET,IAFS,CAAA;;AA5DS,aAAa,GAAA,UAAA,CAAA,CADjC,MAAM,CAAC;AAAE,EAAA,IAAI,EAAE,eAAR;AAAyB,EAAA,UAAU,EAAE;AAArC,CAAD,CAC2B,CAAA,EAAb,aAAa,CAAb;eAAA,a","sourcesContent":["import axios from \"axios\";\n\nimport {\n  Module, VuexModule, Mutation, Action,\n} from \"vuex-module-decorators\";\n\nimport { Course, CourseUser } from \"../models\";\n\ninterface CourseState {\n  courses: Course[];\n  course_users: CourseUser[];\n}\n\n@Module({ name: \"CoursesModule\", namespaced: true })\nexport default class CoursesModule extends VuexModule {\n  private course_state: CourseState = {\n    courses: [],\n    course_users: [], // this stores all of the users for the current course.\n  }\n\n  public get courses(): Course[] {\n    return this.course_state.courses;\n  }\n\n  public get course_users(): CourseUser[] {\n    return this.course_state.course_users;\n  }\n\n  @Action\n  public async fetchCourses(): Promise<Course[]> {\n    const response = await axios.get(\"/gradingsheet/api/courses\");\n    const courses = response.data as Course[];\n    this.setCourses(courses);\n    return courses;\n  }\n\n  @Action\n  public async fetchCourseUsers(opts: { course_id: number }): Promise<CourseUser[]> {\n    const response = await axios.get(`/gradingsheet/api/courses/${opts.course_id}/users`);\n    const course_users = response.data as CourseUser[];\n    this.setCourseUsers(course_users);\n    return course_users;\n  }\n\n  @Action\n  public async updateCourseUser(course_user: CourseUser): Promise<CourseUser> {\n    const response = await axios\n      .put(`/gradingsheet/api/courses/${course_user.course_id}/users/${course_user.user_id}`,\n        { course_user });\n    const user = response.data as CourseUser;\n\n    // find the current course_user\n    const index = this.course_state.course_users.findIndex((_user) => _user.user_id === course_user.user_id);\n    if (index > -1) {\n      this.setCourseUser(user);\n    } else {\n      this.addCourseUser(user);\n    }\n    return course_user;\n  }\n\n  @Mutation setCourseUser(_user: CourseUser): void {\n    const index = this.course_state.course_users.findIndex((user) => user.user_id === _user.user_id);\n    this.course_state.course_users[index] = _user;\n  }\n\n  @Mutation addCourseUser(_user: CourseUser): void {\n    this.course_state.course_users.push(_user);\n  }\n\n  @Mutation setCourses(_courses: Course[]): void {\n    this.course_state.courses = _courses;\n  }\n\n  @Mutation setCourseUsers(course_users: CourseUser[]): void {\n    this.course_state.course_users = course_users;\n  }\n}\n"],"sourceRoot":""}]}